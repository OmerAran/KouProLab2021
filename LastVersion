# LAST VERSION


#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int sabit = 50 ;

struct kayit{
    int ogrno;
    int derskodu;
    int puan;
    int derskodu2 ;
    int puan2 ;

};

struct kayit *sinif;

FILE *indexFile;
FILE *binFile ;

void indexDosyasiOlustur(){

    binFile=fopen("/Users/omeraran/desktop/okul.bin", "wb");
    
    for (int i = 0; i<sabit; i++) {
        fprintf(binFile, "%d \t%d \t %d \t  %d \t  %d\n",sinif[i].ogrno,sinif[i].derskodu,sinif[i].puan, sinif[i].derskodu2,sinif[i].puan2);
        
    }
    fclose(binFile);

    indexFile = fopen("/Users/omeraran/desktop/veri.txt","w");
    binFile = fopen("/Users/omeraran/desktop/okul.bin","rb");


    fprintf(indexFile,"no \t ders1\tNot1\tders2\t not2\n-------------------------------------------------- \n");

    if (indexFile==NULL) {
        printf("////////////////// Dosya olusturalamadi //////////////////");
    }
    else{
        while(!feof(binFile)){
            fprintf(indexFile,"%c",fgetc(binFile));
        }
    }
    fclose(indexFile);
    fclose(binFile);
}

void siralama(){
    int i,j,gecici;

    for(i=0;i<sabit;i++){
        for(j=1;j<sabit-i;j++){
            if(sinif[j-1].ogrno>sinif[j].ogrno){
                gecici=sinif[j].ogrno;
                sinif[j].ogrno=sinif[j-1].ogrno;
                sinif[j-1].ogrno=gecici;

                gecici=sinif[j].derskodu;
                sinif[j].derskodu=sinif[j-1].derskodu;
                sinif[j-1].derskodu=gecici;

                gecici=sinif[j].puan;
                sinif[j].puan=sinif[j-1].puan;
                sinif[j-1].puan=gecici;
                
                gecici=sinif[j].derskodu2;
                sinif[j].derskodu2=sinif[j-1].derskodu2;
                sinif[j-1].derskodu2=gecici;

                gecici=sinif[j].puan2;
                sinif[j].puan2=sinif[j-1].puan2;
                sinif[j-1].puan2=gecici;

            }
        }
    }
    
    indexDosyasiOlustur();
}

int Binarysearch(int aranan){
    siralama();
    int buyuk=sabit,kucuk=0;

    while(kucuk<=buyuk){

        int orta=(buyuk+kucuk)/2;

        if(aranan == sinif[orta].ogrno){
            return orta;
        }
        else if(aranan<sinif[orta].ogrno){
            buyuk=orta-1;
        }
        else{
            kucuk = orta+1;
        }

    }
    return -1;
}


void indeksDosyasiniGoster(){
    siralama();
    indexFile = fopen("/Users/omeraran/desktop/veri.txt","r");

    while(!feof(indexFile)){
        putchar(fgetc(indexFile));
    }

    fclose(indexFile);

}

void kayitGuncelle(int i ){

    int a=Binarysearch(i);
    printf("%d numaralı ogrencinin ; \nnotları: %d\t %d\nHangi dersi güncelleyecekseniz o dersin kodunu yazınız : ",sinif[a].ogrno,sinif[a].puan,sinif[a].puan2);
    int hangiDers ,yeniPuan;;
    scanf("%d",&hangiDers);
    if (hangiDers == sinif[a].derskodu) {
        printf("Yeni puanı giriniz : ") ;
        scanf("%d",&yeniPuan);
        sinif[a].puan=yeniPuan;
        printf("Yeni notu: %d olarak güncellendi.",sinif[a].puan);
    }
    else if (hangiDers == sinif[a].derskodu2){
        printf("Yeni puanı giriniz : ") ;
        scanf("%d",&yeniPuan);
        sinif[a].puan2=yeniPuan;
        printf("Yeni notu: %d olarak güncellendi.",sinif[a].puan2);
    }
    else{
        printf("////////////////// Bu öğrenci girmiş olduğunuz dersi almıyor.//////////////////");
    }
    
    indexDosyasiOlustur();

}

void kayitEkle(){

    printf("////////////////// \nSırasıyla Yeni ogrencinin no, ders kodu,puanı , 2. ders kodu ve 2. ders puanını giriniz //////////////////\n");
    scanf("%d\t %d\t %d\t %d\t %d",&sinif[sabit].ogrno,&sinif[sabit].derskodu,&sinif[sabit].puan,&sinif[sabit].derskodu2,&sinif[sabit].puan2);

    sabit++;
    indexDosyasiOlustur();
}


void indeksDosyasiniSil(){
    int sonuc;

     sonuc = remove("/Users/omeraran/desktop//Users/omeraran/desktop/veri.txt");

    if(sonuc == 0){
        printf("\n\n////////////////// Dosya basariyla silindi. //////////////////");
    }
    else{
        printf("////////////////// Dosya silinemedi! //////////////////");
    }

}

void kayitBul(){
    printf("Bulmak istediğiniz ogrencinin numarasini giriniz: ");
    int i ;
    scanf("%d",&i);
    int deg=Binarysearch(i);
    if(deg == -1){
        printf("////////////////// Ogrenci bulunamadi. //////////////////");
    }
    else{
        printf("////////////////// \n %d nolu ogrencinin \n birinci derskodu: %d\n birinci ders puani:%d\n ikinci derskodu: %d\n ikinci ders puani:%d \n//////////////////// \n",
               sinif[deg].ogrno,sinif[deg].derskodu,sinif[deg].puan,sinif[deg].derskodu2,sinif[deg].puan2);
    }

}
void veriDosyasiniGoster(){
    siralama();
    binFile = fopen("/Users/omeraran/desktop/okul.bin", "rb");
    while(!feof(binFile)){
        putchar(fgetc(binFile));
    }
    fclose(binFile);
}
void kayitSil(){
    printf("Silmek istediginiz ogrencinin no: ");
    int a;
    scanf("%d",&a);
    int aranan=Binarysearch(a);

    for(int i =aranan ;i<sabit;i++){
        sinif[i].derskodu2=sinif[i+1].derskodu2;
        sinif[i].puan2=sinif[i+1].puan2;
        sinif[i].derskodu=sinif[i+1].derskodu;
        sinif[i].puan=sinif[i+1].puan;
        sinif[i].ogrno=sinif[i+1].ogrno;
    }
    printf("Kullanıcı Başarıyla Silindi.\n");
    sabit--;
    indexDosyasiOlustur();
}

int main()
{
    sinif = (struct kayit*)malloc(100*sizeof(struct kayit));
    
    for(int i= 0 ;i<sabit;i++){
        
        sinif[i].ogrno=200+i;
        sinif[i].derskodu=rand()%2+1;
        sinif[i].puan=rand()%50+50;
        sinif[i].derskodu2=rand()%2+3;
        sinif[i].puan2=rand()%50+50;
    }
  

    int islemSec;
   

    do {
        
       
        
        printf("\n1.Index Dosyası Oluştur");
        printf("\n2.Index Dosyasını Göster");
        printf("\n3.Index Dosyasını Sil");
        printf("\n4.Veri Dosyasını Göster");
        printf("\n5.Kayıt Bul");
        printf("\n6.Kayıt Ekle");
        printf("\n7.Kayıt Güncelle");
        printf("\n8.Kayıt Sil");
        printf("\n0.Çıkış için 0'a basınız.");
        
        printf("\nYapmak istediğiniz işlemi seçiniz : ");
        scanf("%d",&islemSec);
        
        switch (islemSec){
                    case 1:
                        indexDosyasiOlustur();
                        break;
                
                    case 2:
                        indeksDosyasiniGoster();
                         break;
                
                    case 3:
                       indeksDosyasiniSil();
                        break;
                
                    case 4:
                       veriDosyasiniGoster();
                        break;
                
                    case 5:
                       kayitBul();
                        break;
                
                    case 6:
                     kayitEkle();
                      break;
                
                    case 7:
                        printf("Ogrenci numarasini giriniz: ");
                        int a;
                       scanf("%d",&a);
                       kayitGuncelle(a);
                        break;
                
                  case 8 :
                       kayitSil();
                       break;
                
                
                    default:
                        break;

                }
        
        
    } while (islemSec !=0);
    
    
    
    return 0;}
    
    
    
   


